/**********************************
分析ファイル
2017/10/19
B15T2017C 太田悠介
***********************************/

#define GLOBAL_DEFINE
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "lib1.h"

//解析
void analize(){
  int x = 0;
  for(int i = 0; i < quenum ; i++){
    x = synbool(i);
    if(x == 1){ //遷移可能
      disp(i);
    }else if(x == 2){  //nextがend
      disp(i);
      printf("解析終了.\n");
    }else{  //遷移不可能
      printf("\n文法が間違っています.\n");
      exit(1);
    }
  }
}

//問題の単語の品詞の状態を調べて配列に格納
void possearch(){
  for(int i = 0; i < quenum; i++){
    for(int j = 0; dict[j][0][0] != '\0'; j++){
      //単語と辞書の左側が一致している場合
      if(strcmp(questr[i], dict[j][0]) == 0){
        //単語の品詞に辞書の品詞をコピー
        strcpy(questrpos[i], dict[j][1]);
        break;
        //ピリオドが入っていた場合
      }else if(strcmp(questr[i], ".") == 0){
        //単語の品詞に"end"をコピー
        strcpy(questrpos[i], "end");
        break;
      }
    }
    //何とも一致しなかった場合配列には何も入っていないので
    if(strcmp(questrpos[i], "\0") == 0){
      printf("単語が辞書に存在していません.\n");
      exit(1);
    }
  }
}


//現在の品詞の状態と次の品詞の状態が遷移可能か調べる
int synbool(int next){
  for(int i = 0; i < SYNNUM; i++){
    //現在の品詞と文法の左側が一致するのを探す
    if(strcmp(currentpos, syn[i][0]) == 0){
      //次の品詞と文法の右側が一致するのを探す
      if(strcmp(questrpos[next], syn[i][1]) == 0){
        //currentposにnextを入れる
        strcpy(currentpos, questrpos[next]);
        if(strcmp(questrpos[next], "end") == 0){
          //nextがendなら2を返す
          return 2;
        }
        //遷移可能なら1を返す
        return 1;
      }
    }
  }
  //不可能ならば0を返す
  return 0;
}


//解析を表示する
void disp(int cur){
  if(cur == 0){
    printf("       \n|  \nstart\n");
  }
  for(int i = 0; i < cur+2; i++){
    if(i == 0){
      printf("");
    }else{
      printf("\t%s", questr[i-1]);
    }
  }
  printf("\n");
  for(int i = 0; i < cur+2; i++){
    if(strlen(questr[i-1]) < 8){
      printf("|\t");
    }else{
      printf("|\t\t");
    }
  }
  for(int i = 0; i < cur+2; i++){
    if(i == 0){
      printf("\nstart");
    }else{
      if(strlen(questr[i-2]) < 8){
        printf("\t%s", questrpos[i-1]);
      }else{
        printf("\t\t%s", questrpos[i-1]);
      }
    }
  }
  printf("\n");
}
